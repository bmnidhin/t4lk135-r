name: Build and Notify
on:
  push:
  deployment:
  pull_request:
    types: [opened,closed]
  issues:
    types: [opened, closed, reopened]
  issue_comment:
    types: [created]
  watch:
    types: [started]

jobs:
  deployment:
    runs-on: 'ubuntu-latest'

    steps:
     - name: send custom message
       uses: appleboy/telegram-action@master
       with:
        to: ${{ secrets.chat }}
        token: ${{ secrets.token }}
        message: |
         The ${{ commit.ref }} event triggered final step.
         echo This event is a pull request that had an assignee removed.
     - name: telegram-Notify
       uses: athul/telewire@master
       if: always()
       with:
        chat: ${{ secrets.chat }}
        token: ${{ secrets.token }}
        status: ${{ job.status }}
 
    
    
    
    
# name: Deployment

# on: ['push','deployment']

# jobs:
#   deployment:
#     runs-on: 'ubuntu-latest'

#     steps:
#     - name: 'deployment pending'
#       uses: 'deliverybot/deployment-status@master'
#       with:
#         state: 'pending'
#         token: '${{ github.token }}'

#     - name: deploy
#       run: |
#         echo "environment - ${{ github.event.deployment.task }}"
#         echo "payload - ${{ github.event.deployment.payload }}"

#     - name: 'deployment success'
#       if: success()
#       uses: 'deliverybot/deployment-status@master'
#       with:
#         state: 'success'
#         token: '${{ github.token }}'

#     - name: 'deployment failure'
#       if: failure()
#       uses: 'deliverybot/deployment-status@master'
#       with:
#         state: 'failure'
#         token: '${{ github.token }}'
#     - uses: yanzay/notify-telegram@master
#       if: always()
#       with:
#          chat: ${{ secrets.chat }}
#          token: ${{ secrets.token }}
#          status: ${{ job.status }}
         
#     - name: Telegram GitHub Repository Events
#       uses: avkviring/telegram-github-action@v0.0.7
#       env:
#         telegram_to: ${{ secrets.chat }}  
#         telegram_token: ${{ secrets.token }}
#         event: ${{ toJson(github.event) }}
# done

